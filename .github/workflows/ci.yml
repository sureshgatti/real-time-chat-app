name: CI-CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Login to Docker Hub (using GitHub Secrets)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 4: Build and push Backend image
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rt-chat-backend:latest

      # Step 5: Build and push Frontend image
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/rt-chat-frontend:latest

      # Step 6 (Optional): Deploy to Kubernetes (only if KUBE_CONFIG secret is present)
      - name: Deploy to Kubernetes
        if: ${{ secrets.KUBE_CONFIG != '' }}
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig.yaml
          kubectl --kubeconfig=kubeconfig.yaml apply -f k8s/
